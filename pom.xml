<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>me.xstr</groupId>
	<artifactId>api</artifactId>
	<version>0.0.5-SNAPSHOT</version>
	<packaging>${xstr.packaging}</packaging>

	<name>api.xstr.me</name>
	<description>the API for xstr.me</description>

	<organization>
		<name>Xstr.Me</name>
		<url>https://xstr.me</url>
	</organization>

	<scm>
		<url>https://github.com/guedouari/api.xstr.me/</url>
		<connection>https://github.com/guedouari/api.xstr.me.git</connection>
	</scm>

	<issueManagement>
		<url>https://github.com/guedouari/api.xstr.me/issues</url>
		<system>GitHub</system>
	</issueManagement>

	<ciManagement>
		<system>Travis-CI</system>
		<url>https://travis-ci.org/guedouari/api.xstr.me</url>
	</ciManagement>

	<url>https://api.xstr.me</url>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<xstr.packaging>jar</xstr.packaging>
		<xstr.password>changeme</xstr.password>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
			<scope>compile</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency> <groupId>io.swagger</groupId> <artifactId>swagger-codegen-maven-plugin</artifactId> 
			<version>2.2.3</version> </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>

		<plugins>

			<!-- <plugin> <groupId>io.swagger</groupId> <artifactId>swagger-codegen-maven-plugin</artifactId> 
				<version>2.2.3</version> <executions> <execution> <goals> <goal>generate</goal> 
				</goals> <configuration> <inputSpec>src/main/resources/swagger.json</inputSpec> 
				<language>spring</language> <output>src/main/gen</output> <configOptions> 
				<sourceFolder>api</sourceFolder> </configOptions> </configuration> </execution> 
				</executions> </plugin> -->

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- <configuration> <profiles> <profile>dev</profile> <profile>production</profile> 
					</profiles> </configuration> -->
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>target/jacoco.exec
							</destFile>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created -->
					<!-- after unit tests have been run -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec
							</dataFile>
							<outputDirectory>target/coverage
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.4.0.905</version>
			</plugin>

		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>dev/**</exclude>
				</excludes>
			</resource>
		</resources>

	</build>

	<profiles>

		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- default Spring profiles -->
				<xstr.profiles>dev</xstr.profiles>
			</properties>
		</profile>

		<profile>
			<id>openshift</id>
			<properties>
				<xstr.profiles>docker</xstr.profiles>
			</properties>
		</profile>

		<profile>
			<id>heroku</id>
			<properties>
				<xstr.profiles>docker</xstr.profiles>
			</properties>
		</profile>

		<profile>
			<id>tomcat</id>
			<properties>
				<xstr.profiles>xstrserver</xstr.profiles>
				<xstr.packaging>war</xstr.packaging>
			</properties>
		</profile>

	</profiles>


</project>
